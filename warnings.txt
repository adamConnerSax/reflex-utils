Warning: File listed in .stack-work/downloaded/N2hQYtPm6lrH/reflex-dom/reflex-dom.cabal file does not exist: src/Reflex/Dom/Xhr/Foreign.hs
Warning: File listed in .stack-work/downloaded/N2hQYtPm6lrH/reflex-dom/reflex-dom.cabal file does not exist: src/Reflex/Dom/WebSocket/Foreign.hs
Warning: File listed in .stack-work/downloaded/N2hQYtPm6lrH/reflex-dom/reflex-dom.cabal file does not exist: src/Reflex/Dom/Xhr/ResponseType.hs
Warning: File listed in .stack-work/downloaded/N2hQYtPm6lrH/reflex-dom/reflex-dom.cabal file does not exist: src/Reflex/Dom/Xhr/Exception.hs
WARNING: Ignoring out of range dependency (allow-newer enabled): ghcjs-dom-0.8.0.0. reflex-utils requires: ==0.7.*
reflex-utils-0.2.1.1: unregistering (local file changes: app/editor/Main.hs app/forRyan/Main.hs app/formBuilder/Css.hs app/formBuilder/Main.hs app/layout/...)
reflex-utils-0.2.1.1: configure (lib + exe)
Configuring reflex-utils-0.2.1.1...
reflex-utils-0.2.1.1: build (lib + exe)
Preprocessing library reflex-utils-0.2.1.1...
[ 1 of 29] Compiling Reflex.Dom.Contrib.ReflexConstraints ( src/Reflex/Dom/Contrib/ReflexConstraints.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/ReflexConstraints.o )
[ 2 of 29] Compiling Reflex.Dom.Contrib.ListHoldFunctions.Core ( src/Reflex/Dom/Contrib/ListHoldFunctions/Core.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/ListHoldFunctions/Core.o )
[ 3 of 29] Compiling Reflex.Dom.Contrib.ListHoldFunctions.Maps ( src/Reflex/Dom/Contrib/ListHoldFunctions/Maps.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/ListHoldFunctions/Maps.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/ListHoldFunctions/Core.hs:27:1: warning: [-Wunused-imports]
    The import of ‘Data.Functor.Compose’ is redundant
      except perhaps to import instances from ‘Data.Functor.Compose’
    To import instances alone, use: import Data.Functor.Compose()
[ 4 of 29] Compiling Reflex.Dom.Contrib.Layout.Types ( src/Reflex/Dom/Contrib/Layout/Types.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/Types.o )
[ 5 of 29] Compiling Reflex.Dom.Contrib.Layout.LayoutM ( src/Reflex/Dom/Contrib/Layout/LayoutM.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/LayoutM.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Layout/LayoutM.hs:239:1: warning: [-Worphans]
    Orphan instance:
      instance RD.MonadAdjust t m => RD.MonadAdjust t (StateT s m)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Layout/LayoutM.hs:281:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘printLayoutConfig’
[ 6 of 29] Compiling Reflex.Dom.Contrib.Layout.FlexLayout ( src/Reflex/Dom/Contrib/Layout/FlexLayout.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/FlexLayout.o )
[ 7 of 29] Compiling Reflex.Dom.Contrib.Layout.LayoutMFlex ( src/Reflex/Dom/Contrib/Layout/LayoutMFlex.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/LayoutMFlex.o )
[ 8 of 29] Compiling Reflex.Dom.Contrib.Layout.OptimizedFlexLayout ( src/Reflex/Dom/Contrib/Layout/OptimizedFlexLayout.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/OptimizedFlexLayout.o )
[ 9 of 29] Compiling Reflex.Dom.Contrib.Layout.Events ( src/Reflex/Dom/Contrib/Layout/Events.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/Events.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Layout/OptimizedFlexLayout.hs:27:1: warning: [-Wunused-imports]
[10 of 29] Compiling Reflex.Dom.Contrib.Layout.ClayUtils ( src/Reflex/Dom/Contrib/Layout/ClayUtils.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/ClayUtils.o )
    The qualified import of ‘Reflex’ is redundant
[11 of 29] Compiling Reflex.Dom.Contrib.Layout.TabLayout ( src/Reflex/Dom/Contrib/Layout/TabLayout.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/TabLayout.o )
      except perhaps to import instances from ‘Reflex’
    To import instances alone, use: import Reflex()

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Layout/Events.hs:30:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘addKeyedClassBelow’
[12 of 29] Compiling Reflex.Dom.Contrib.Layout.All ( src/Reflex/Dom/Contrib/Layout/All.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Layout/All.o )
[13 of 29] Compiling Reflex.Dom.Contrib.EventUtils ( src/Reflex/Dom/Contrib/EventUtils.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/EventUtils.o )
[14 of 29] Compiling Reflex.Dom.Contrib.Widgets.WidgetResult ( src/Reflex/Dom/Contrib/Widgets/WidgetResult.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Widgets/WidgetResult.o )

[15 of 29] Compiling Reflex.Dom.Contrib.Editor ( src/Reflex/Dom/Contrib/Editor.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Editor.o )
/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/WidgetResult.hs:47:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘wrInternalEv’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Editor.hs:113:24: warning: [-Wname-shadowing]
[16 of 29] Compiling Reflex.Dom.Contrib.DynamicUtils ( src/Reflex/Dom/Contrib/DynamicUtils.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/DynamicUtils.o )
    This binding for ‘t’ shadows the existing binding
[17 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.DynValidation ( src/Reflex/Dom/Contrib/FormBuilder/DynValidation.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/DynValidation.o )
      bound at src/Reflex/Dom/Contrib/Editor.hs:112:10
[18 of 29] Compiling Reflex.Dom.Contrib.Widgets.ModalEditor ( src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Widgets/ModalEditor.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Editor.hs:113:30: warning: [-Wname-shadowing]
    This binding for ‘m’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/Editor.hs:112:10

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Editor.hs:125:19: warning: [-Wname-shadowing]
    This binding for ‘g’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/Editor.hs:119:10

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Editor.hs:125:21: warning: [-Wname-shadowing]
    This binding for ‘f’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/Editor.hs:119:10

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Editor.hs:125:29: warning: [-Wname-shadowing]
    This binding for ‘m’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/Editor.hs:119:10

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Editor.hs:138:21: warning: [-Wname-shadowing]
    This binding for ‘f’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/Editor.hs:132:10

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:136:51: warning: [-Wunused-matches]
    Defined but not used: ‘l’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:136:59: warning: [-Wunused-matches]
    Defined but not used: ‘ic’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:163:40: warning: [-Wunused-top-binds]
    Defined but not used: ‘viewState’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:164:40: warning: [-Wunused-top-binds]
    Defined but not used: ‘editWidgetInput’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:165:40: warning: [-Wunused-top-binds]
    Defined but not used: ‘editorValue’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:166:40: warning: [-Wunused-top-binds]
    Defined but not used: ‘editorChange’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:315:1: warning: [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘InnerModalEvs’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:315:26: warning: [-Wunused-top-binds]
    Defined but not used: data constructor ‘InnerModal’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:315:39: warning: [-Wunused-top-binds]
    Defined but not used: ‘updateOutput’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:315:66: warning: [-Wunused-top-binds]
    Defined but not used: ‘modalClosed’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:315:93: warning: [-Wunused-top-binds]
    Defined but not used: ‘updateInput’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:329:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘modalEditorEither'’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:412:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘mkModalBodyUpdateAlways’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/Widgets/ModalEditor.hs:427:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘visibleCSS’
[19 of 29] Compiling Reflex.Dom.Contrib.Widgets.SafeDropdown ( src/Reflex/Dom/Contrib/Widgets/SafeDropdown.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/Widgets/SafeDropdown.o )
[20 of 29] Compiling Reflex.Dom.Contrib.CssUtils ( src/Reflex/Dom/Contrib/CssUtils.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/CssUtils.o )
[21 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.Configuration ( src/Reflex/Dom/Contrib/FormBuilder/Configuration.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/Configuration.o )
[22 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.FormEditor ( src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/FormEditor.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:88:1: warning: [-Worphans]
    Orphan instance:
      instance (Reflex t, Monad m, DomBuilder t m, MonadHold t m,
                PostBuild t m) =>
               Combinable (DynMaybe t) (Form t m)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:93:1: warning: [-Worphans]
    Orphan instance:
      instance (Reflex t, Monad m, DomBuilder t m, MonadHold t m,
                PostBuild t m) =>
               Combinable (FormValue t) (Form t m)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:117:1: warning: [-Worphans]
    Orphan instance:
      instance (Reflex t, MonadHold t m, MonadFix m) =>
               Distributable (FormValue t) m
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:118:24: warning: [-Wname-shadowing]
    This binding for ‘t’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:117:10

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:118:30: warning: [-Wname-shadowing]
    This binding for ‘m’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:117:10

[23 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.Builder ( src/Reflex/Dom/Contrib/FormBuilder/Builder.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/Builder.o )
/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:126:11: warning: [-Wname-shadowing]
    This binding for ‘x’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/FormBuilder/FormEditor.hs:119:14

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Builder.hs:243:1: warning: [-Worphans]
    Orphan instance:
      instance (RD.DomBuilder t m, FormBuilder t m a) =>
               B.Builder (FR t m) (WidgetResult t) FValidation a
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Builder.hs:375:1: warning: [-Worphans]
    Orphan instance:
      instance (RD.DomBuilder t m, RD.MonadHold t m, RD.PostBuild t m) =>
               B.Buildable (FR t m) (WidgetResult t) FValidation
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.
[24 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.Instances.Basic ( src/Reflex/Dom/Contrib/FormBuilder/Instances/Basic.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/Instances/Basic.o )
[25 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.Instances.Containers ( src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:129:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘containerActionButton’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:198:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, Ord k, VFormBuilderBoth t m k a) =>
               FormBuilder t m (M.Map k a)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:245:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, VFormBuilderC t m a) =>
               FormBuilder t m [a]
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:257:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, VFormBuilderC t m a, Ord a) =>
               FormBuilder t m (S.Set a)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:280:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, VFormBuilderBoth t m Int a) =>
               FormBuilder t m (IM.IntMap a)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:295:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, VFormBuilderC t m a) =>
               FormBuilder t m (Seq.Seq a)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:321:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, VFormBuilderBoth t m k v, Ord k,
                Hashable k, Eq k) =>
               FormBuilder t m (HML.HashMap k v)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:336:1: warning: [-Worphans]
    Orphan instance:
      instance (FormInstanceC t m, VFormBuilderC t m a, Hashable a,
                Eq a) =>
               FormBuilder t m (HS.HashSet a)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:340:1: warning: [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘BuildF’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:355:1: warning: [-Worphans]
    Orphan instance:
      instance (B.Validatable FValidation a,
                B.Validatable FValidation b) =>
               B.Validatable FValidation (a, b)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:384:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘buildLBDelete’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:398:69: warning: [-Wunused-matches]
    Defined but not used: ‘mFN’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:470:57: warning: [-Wunused-matches]
    Defined but not used: ‘mFN’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:539:84: warning: [-Wunused-matches]
    Defined but not used: ‘mFN’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:548:15: warning: [-Wname-shadowing]
    This binding for ‘k’ shadows the existing binding
      bound at src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:547:16

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/Instances/Containers.hs:583:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘ddAttrsDyn’
[26 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.Instances ( src/Reflex/Dom/Contrib/FormBuilder/Instances.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/Instances.o )
[27 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.AllDefault ( src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/AllDefault.o )

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:42:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fix’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fix’
    To import instances alone, use: import Control.Monad.Fix()

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:54:1: warning: [-Worphans]
    Orphan instance: instance Default FormIncludedCss
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:67:1: warning: [-Worphans]
    Orphan instance: instance Default CssConfiguration
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:76:1: warning: [-Worphans]
    Orphan instance: instance Default (InputElementConfig t)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:102:1: warning: [-Worphans]
    Orphan instance:
      instance RD.DomBuilder t m => Default (LayoutConfiguration t m)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:105:1: warning: [-Worphans]
    Orphan instance:
      instance DefaultConfigurationC t m =>
               Default (FormConfiguration t m)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:114:1: warning: [-Worphans]
    Orphan instance:
      instance DefaultConfigurationC t m =>
               Default (BuilderFunctions t m)
    To avoid this
        move the instance declaration to the module of the class or of the type, or
        wrap the type with a newtype and declare the instance on the new type.

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:141:3: warning: [-Wunused-matches]
    Defined but not used: ‘validClasses’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:142:3: warning: [-Wname-shadowing]
    This binding for ‘formType’ shadows the existing binding
      imported from ‘Reflex.Dom.Contrib.FormBuilder.Builder’ at src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:27:1-55
      (and originally defined in ‘Reflex.Dom.Contrib.FormBuilder.Configuration’
         at src/Reflex/Dom/Contrib/FormBuilder/Configuration.hs:197:1-30)

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:156:36: warning: [-Wdeprecations]
    In the use of ‘uniqDyn’
    (imported from Reflex, but defined in Reflex.Dynamic):
    Deprecated: "Use 'holdUniqDyn' instead; note that it returns a MonadHold action rather than a pure Dynamic"

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:200:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isInvalidData’

/Users/adam/Development/haskell/reflex-utils/src/Reflex/Dom/Contrib/FormBuilder/AllDefault.hs:251:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isObserverItem’
[28 of 29] Compiling Reflex.Dom.Contrib.FormBuilder ( src/Reflex/Dom/Contrib/FormBuilder.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder.o )
[29 of 29] Compiling Reflex.Dom.Contrib.FormBuilder.Instances.ModalForm ( src/Reflex/Dom/Contrib/FormBuilder/Instances/ModalForm.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/Reflex/Dom/Contrib/FormBuilder/Instances/ModalForm.o )
Preprocessing executable 'reflex-utils-editor-warp' for
reflex-utils-0.2.1.1...
[1 of 1] Compiling Main             ( app/editor/Main.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-editor-warp/reflex-utils-editor-warp-tmp/Main.o )

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.Layout.ClayUtils’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.Layout.ClayUtils’
    To import instances alone, use: import Reflex.Dom.Contrib.Layout.ClayUtils()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:19:1: warning: [-Wunused-imports]
    The import of ‘flexCol', flexFill, flexRow, flexRow'’
    from module ‘Reflex.Dom.Contrib.Layout.FlexLayout’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:28:1: warning: [-Wunused-imports]
    The import of ‘CssClass, CssClasses, LayoutDirection,
                   LayoutOrientation, emptyCss’
    from module ‘Reflex.Dom.Contrib.Layout.Types’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.ReflexConstraints’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.ReflexConstraints’
    To import instances alone, use: import Reflex.Dom.Contrib.ReflexConstraints()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:35:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.Widgets.SafeDropdown’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.Widgets.SafeDropdown’
    To import instances alone, use: import Reflex.Dom.Contrib.Widgets.SafeDropdown()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:38:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.Widgets.WidgetResult’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.Widgets.WidgetResult’
    To import instances alone, use: import Reflex.Dom.Contrib.Widgets.WidgetResult()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:52:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.FormBuilder.Configuration’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.FormBuilder.Configuration’
    To import instances alone, use: import Reflex.Dom.Contrib.FormBuilder.Configuration()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:53:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.FormBuilder.FormEditor’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.FormBuilder.FormEditor’
    To import instances alone, use: import Reflex.Dom.Contrib.FormBuilder.FormEditor()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:60:1: warning: [-Wunused-imports]
    The import of ‘CssLink’
    from module ‘Reflex.Dom.Contrib.CssUtils’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:68:1: warning: [-Wunused-imports]
    The import of ‘Prism, Traversal, ^.’
    from module ‘Control.Lens’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:73:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fix’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fix’
    To import instances alone, use: import Control.Monad.Fix()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:74:1: warning: [-Wunused-imports]
    The import of ‘Data.Bool’ is redundant
      except perhaps to import instances from ‘Data.Bool’
    To import instances alone, use: import Data.Bool()

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:75:1: warning: [-Wunused-imports]
    The import of ‘Compose, Compose’
    from module ‘Data.Functor.Compose’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:80:1: warning: [-Wunused-imports]
    The import of ‘rmap’ from module ‘Data.Profunctor’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:135:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      boxEditor :: DomBuilder t1 m =>
                   Editor x (Form t m) a b -> Editor x (Form t m) a b

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:211:3: warning: [-Wunused-do-bind]
    A do-notation statement discarded a result of type ‘[()]’
    Suppress this warning by saying
      ‘_ <- staticTabbedLayout
              (def)
              (simpleProdEditorTab cfg)
              [simpleProdEditorTab cfg, categoricalEditorTab cfg,
               sumEditTab cfg]’

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:225:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      includedCss :: data-default-class-0.1.2.0:Data.Default.Class.Default
                       a =>
                     a

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:226:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: toLink :: CssLinks

/Users/adam/Development/haskell/reflex-utils/app/editor/Main.hs:227:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      toEmbed :: bytestring-0.10.8.1:Data.ByteString.Internal.ByteString
Linking .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-editor-warp/reflex-utils-editor-warp ...
Preprocessing executable 'reflex-utils-forRyan-warp' for
reflex-utils-0.2.1.1...
[1 of 1] Compiling Main             ( app/forRyan/Main.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-forRyan-warp/reflex-utils-forRyan-warp-tmp/Main.o )

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:13:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Ref’ is redundant
      except perhaps to import instances from ‘Control.Monad.Ref’
    To import instances alone, use: import Control.Monad.Ref()

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:14:1: warning: [-Wunused-imports]
    The import of ‘Data.IORef’ is redundant
      except perhaps to import instances from ‘Data.IORef’
    To import instances alone, use: import Data.IORef()

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:26:1: warning: [-Wunused-imports]
    The import of ‘Data.Maybe’ is redundant
      except perhaps to import instances from ‘Data.Maybe’
    To import instances alone, use: import Data.Maybe()

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:27:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:39:3: warning: [-Wunused-matches]
    Defined but not used: ‘pHandle’

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:59:22: warning: [-Wtype-defaults]
    • Defaulting the following constraints to type ‘Integer’
        (Read v0)
          arising from a use of ‘buildLBEMapLWK’
          at app/forRyan/Main.hs:59:22-47
        (Show v0)
          arising from a use of ‘buildLBEMapLWK’
          at app/forRyan/Main.hs:59:22-47
        (Num v0) arising from the literal ‘1’ at app/forRyan/Main.hs:50:29
        (Read v0)
          arising from a use of ‘readMaybe’ at app/forRyan/Main.hs:47:47-55
        (Show v0)
          arising from a use of ‘fieldWidgetDyn'’
          at app/forRyan/Main.hs:47:30-98
    • In the expression: buildLBEMapLWK keyedWidget
      In the second argument of ‘($)’, namely
        ‘buildLBEMapLWK keyedWidget $ constDyn x0’
      In a stmt of a 'do' block:
        res1 <- el "div" $ buildLBEMapLWK keyedWidget $ constDyn x0

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:143:80: warning: [-Wname-shadowing]
    This binding for ‘k’ shadows the existing binding
      bound at app/forRyan/Main.hs:143:28

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:147:48: warning: [-Wdeprecations]
    In the use of ‘uniqDyn’
    (imported from Reflex.Dom, but defined in Reflex.Dynamic):
    Deprecated: "Use 'holdUniqDyn' instead; note that it returns a MonadHold action rather than a pure Dynamic"

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:295:9: warning: [-Wname-shadowing]
    This binding for ‘dyn’ shadows the existing binding
      imported from ‘Reflex.Dom’ at app/forRyan/Main.hs:18:1-75
      (and originally defined in ‘Reflex.Dom.Widget.Basic’)

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:299:16: warning: [-Wname-shadowing]
    This binding for ‘dyn’ shadows the existing binding
      imported from ‘Reflex.Dom’ at app/forRyan/Main.hs:18:1-75
      (and originally defined in ‘Reflex.Dom.Widget.Basic’)

/Users/adam/Development/haskell/reflex-utils/app/forRyan/Main.hs:315:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘testSingleWidget’
Linking .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-forRyan-warp/reflex-utils-forRyan-warp ...
Preprocessing executable 'reflex-utils-formBuilder-warp' for
reflex-utils-0.2.1.1...
[1 of 2] Compiling Css              ( app/formBuilder/Css.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-formBuilder-warp/reflex-utils-formBuilder-warp-tmp/Css.o )

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Css.hs:16:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      bootstrapFIncludedCss :: FormIncludedCss
[2 of 2] Compiling Main             ( app/formBuilder/Main.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-formBuilder-warp/reflex-utils-formBuilder-warp-tmp/Main.o )

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:17:1: warning: [-Wunused-imports]
    The import of ‘Control.Lens’ is redundant
      except perhaps to import instances from ‘Control.Lens’
    To import instances alone, use: import Control.Lens()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.IO.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.IO.Class’
    To import instances alone, use: import Control.Monad.IO.Class()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:22:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Reader’ is redundant
      except perhaps to import instances from ‘Control.Monad.Reader’
    To import instances alone, use: import Control.Monad.Reader()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:24:1: warning: [-Wunused-imports]
    The import of ‘Compose, Compose’
    from module ‘Data.Functor.Compose’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Data.ByteString’ is redundant
      except perhaps to import instances from ‘Data.ByteString’
    To import instances alone, use: import Data.ByteString()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:44:1: warning: [-Wunused-imports]
    The import of ‘Control.Lens.Iso’ is redundant
      except perhaps to import instances from ‘Control.Lens.Iso’
    To import instances alone, use: import Control.Lens.Iso()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:52:1: warning: [-Wunused-imports]
    The import of ‘CssLink’
    from module ‘Reflex.Dom.Contrib.CssUtils’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:54:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.Layout.ClayUtils’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.Layout.ClayUtils’
    To import instances alone, use: import Reflex.Dom.Contrib.Layout.ClayUtils()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:55:1: warning: [-Wunused-imports]
    The import of ‘flexCol', flexItem', flexRow'’
    from module ‘Reflex.Dom.Contrib.Layout.FlexLayout’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:61:1: warning: [-Wunused-imports]
    The import of ‘CssClass, CssClasses, oneClass’
    from module ‘Reflex.Dom.Contrib.Layout.Types’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:81:1: warning: [-Wunused-imports]
    The import of ‘Reflex.Dom.Contrib.FormBuilder.Configuration’ is redundant
      except perhaps to import instances from ‘Reflex.Dom.Contrib.FormBuilder.Configuration’
    To import instances alone, use: import Reflex.Dom.Contrib.FormBuilder.Configuration()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:83:1: warning: [-Wunused-imports]
    The import of ‘buildList’
    from module ‘Reflex.Dom.Contrib.FormBuilder.Instances.Containers’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:86:1: warning: [-Wunused-imports]
    The import of ‘Css’ is redundant
      except perhaps to import instances from ‘Css’
    To import instances alone, use: import Css()

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:94:16: warning: [-Wname-shadowing]
    This binding for ‘test’ shadows the existing binding
      defined at app/formBuilder/Main.hs:351:1

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:236:16: warning: [-Wunused-matches]
    Defined but not used: ‘mFN’

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:237:9: warning: [-Wname-shadowing]
    This binding for ‘b1’ shadows the existing binding
      defined at app/formBuilder/Main.hs:265:1

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:238:9: warning: [-Wname-shadowing]
    This binding for ‘b2’ shadows the existing binding
      defined at app/formBuilder/Main.hs:266:1

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:249:21: warning: [-Wunused-matches]
    Defined but not used: ‘va’

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:263:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: lOfA1 :: ListOfA

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:264:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: lOfA2 :: ListOfA

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:265:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: b1 :: B

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:266:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: b2 :: B

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:268:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: sm :: SMap Double

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:269:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: lm :: LMap Double

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:271:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: c :: C

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:335:35: warning: [-Wdeprecations]
    In the use of ‘combineDyn’
    (imported from Reflex.Dom.Core, but defined in Reflex.Dynamic):
    Deprecated: "Use 'return (zipDynWith f a b)' instead of 'combineDyn f a b'; consider eliminating monadic style"

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:336:3: warning: [-Wdeprecations]
    In the use of ‘forDyn’
    (imported from Reflex.Dom.Core, but defined in Reflex.Dynamic):
    Deprecated: "Use 'return . ffor a' instead of 'forDyn a'; consider eliminating monadic style"

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:354:3: warning: [-Wunused-do-bind]
    A do-notation statement discarded a result of type ‘[()]’
    Suppress this warning by saying
      ‘_ <- staticTabbedLayout
              (def)
              (containersTab cfg)
              [userFormTab cfg, containersTab cfg, flowTestTab cfg]’

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:369:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      includedCss :: data-default-class-0.1.2.0:Data.Default.Class.Default
                       a =>
                     a

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:370:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: toLink :: CssLinks

/Users/adam/Development/haskell/reflex-utils/app/formBuilder/Main.hs:371:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: toEmbed :: ByteString
Linking .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-formBuilder-warp/reflex-utils-formBuilder-warp ...
Preprocessing executable 'reflex-utils-layout-warp' for
reflex-utils-0.2.1.1...
[1 of 1] Compiling Main             ( app/layout/Main.hs, .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-layout-warp/reflex-utils-layout-warp-tmp/Main.o )

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:13:1: warning: [-Wunused-imports]
    The import of ‘runLayoutM’
    from module ‘Reflex.Dom.Contrib.Layout.LayoutM’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:14:1: warning: [-Wunused-imports]
    The import of ‘flexCol, flexItem’
    from module ‘Reflex.Dom.Contrib.Layout.FlexLayout’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:16:1: warning: [-Wunused-imports]
    The import of ‘##’
    from module ‘Reflex.Dom.Contrib.Layout.OptimizedFlexLayout’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Reflex.PerformEvent.Base’ is redundant
      except perhaps to import instances from ‘Reflex.PerformEvent.Base’
    To import instances alone, use: import Reflex.PerformEvent.Base()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:24:1: warning: [-Wunused-imports]
    The import of ‘liftJSM’ from module ‘GHCJS.DOM.Types’ is redundant

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:28:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans’
    To import instances alone, use: import Control.Monad.Trans()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:33:1: warning: [-Wunused-imports]
    The import of ‘Data.FileEmbed’ is redundant
      except perhaps to import instances from ‘Data.FileEmbed’
    To import instances alone, use: import Data.FileEmbed()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Control.Lens’ is redundant
      except perhaps to import instances from ‘Control.Lens’
    To import instances alone, use: import Control.Lens()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:44:1: warning: [-Wunused-imports]
    The import of ‘Data.Proxy’ is redundant
      except perhaps to import instances from ‘Data.Proxy’
    To import instances alone, use: import Data.Proxy()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:45:1: warning: [-Wunused-imports]
    The import of ‘Data.Default’ is redundant
      except perhaps to import instances from ‘Data.Default’
    To import instances alone, use: import Data.Default()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:67:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      boxMargin :: Double -> Css

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:68:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      cssBox :: Double -> Color -> Clay.Stylesheet.StyleM ()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:72:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      cssBoxes :: Clay.Stylesheet.StyleM ()

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:93:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      innerBoxUpdaters :: [CssUpdate]

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:104:28: warning: [-Wunused-matches]
    Defined but not used: ‘x’

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:106:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      innerBoxDfltUpdater :: CssUpdate

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:121:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      innerBoxInitialCss :: CssClasses

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:156:17: warning: [-Wdeprecations]
    In the use of ‘mapDyn’
    (imported from Reflex.Dom.Core, but defined in Reflex.Dynamic):
    Deprecated: "Use 'return . fmap f' instead of 'mapDyn f'; consider eliminating monadic style"

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:157:3: warning: [-Wunused-do-bind]
    A do-notation statement discarded a result of type ‘Dynamic t ()’
    Suppress this warning by saying
      ‘_ <- widgetHold (subWidget1) switchToEv’

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:166:6: warning: [-Wname-shadowing]
    This binding for ‘evSelf’ shadows the existing binding
      bound at app/layout/Main.hs:164:4

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:166:13: warning: [-Wname-shadowing]
    This binding for ‘evChildren’ shadows the existing binding
      bound at app/layout/Main.hs:164:11

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:167:8: warning: [-Wname-shadowing]
    This binding for ‘evSelf’ shadows the existing binding
      bound at app/layout/Main.hs:164:4

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:167:15: warning: [-Wname-shadowing]
    This binding for ‘evChildren’ shadows the existing binding
      bound at app/layout/Main.hs:164:11

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:168:9: warning: [-Wname-shadowing]
    This binding for ‘evSelf’ shadows the existing binding
      bound at app/layout/Main.hs:164:4

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:169:9: warning: [-Wname-shadowing]
    This binding for ‘evChildren’ shadows the existing binding
      bound at app/layout/Main.hs:164:11

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:217:7: warning: [-Wunused-matches]
    Defined but not used: ‘ev4’

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:250:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature: allCss :: B.ByteString

/Users/adam/Development/haskell/reflex-utils/app/layout/Main.hs:261:7: warning: [-Wunused-do-bind]
    A do-notation statement discarded a result of type ‘[()]’
    Suppress this warning by saying ‘_ <- tabbedWidget’
Linking .stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/reflex-utils-layout-warp/reflex-utils-layout-warp ...
reflex-utils-0.2.1.1: copy/register
Installing library in
/Users/adam/Development/haskell/reflex-utils/.stack-work/install/x86_64-osx/custom-jsaddle8-snapshot-MbMQeBaDORp_/8.0.2/lib/x86_64-osx-ghc-8.0.2/reflex-utils-0.2.1.1-6WknaeC9zVsAe6VISvgFP7
Installing executable(s) in
/Users/adam/Development/haskell/reflex-utils/.stack-work/install/x86_64-osx/custom-jsaddle8-snapshot-MbMQeBaDORp_/8.0.2/bin
Registering reflex-utils-0.2.1.1...
